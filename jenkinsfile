pipeline {
    agent any
    tools {
        nodejs "nodejs-jenkins"
        dockerTool "docker-jenkins"
    }
     triggers {
        issueCommentTrigger('.*test this please.*')
    }
    stages{
      stage("SCM"){
          steps {
             git(branch: 'qa', credentialsId: '44feaac4-248a-4a31-bdfc-dc372382fbb1', url: 'https://github.com/nehalBaigSystemLtd/SystemLtd-Form')
             sh 'ls -lrt'
          }
      }
      stage("build"){
          steps {
            sh 'npm install'
          }
      }
      stage("test"){
          steps {
            sh 'npm run unit'
          }
      }
      stage("deploy"){
          steps {
                sshagent(['7d94bfc0-245f-4637-a3da-dbae19921747']) {
                    sh 'ssh -o StrictHostKeyChecking=no -l jenkins 182.176.114.79 "pwd;npm -v; cd ~/SystemLtd-Form;ls -lat;rm -rf node_modules;ls -lat;git pull origin qa;ls -lat;npm install --only=production;ls -lat;pm2 restart app.js;"'
                }  
           }
      }
     stage ("Selenium-Test"){
            steps{
                sshagent(['7d94bfc0-245f-4637-a3da-dbae19921747']) {
                    sh 'ssh -o StrictHostKeyChecking=no -l jenkins 182.176.114.79 " cd ~/SystemLtd-Form;rm -rf node_modules;rm -f SeliniumTestReport.html;npm install;npm run test;rm -rf node_modules;npm install --only=production"'
                    sh 'ssh -o StrictHostKeyChecking=no -l jenkins 182.176.114.79 " cd ~/SystemLtd-Form;cat SeliniumTestReport.html">SeliniumTestReport.html'
                } 
                
            }
        }
    }        
     post{
        success{
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './', reportFiles: 'UnitTestReport.html', reportName: 'Unit Test Report', reportTitles: 'Unit Test Report'])
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './', reportFiles: 'SeliniumTestReport.html', reportName: 'Selinium Test Report', reportTitles: 'Selinium Test Report'])
        }
     }
}
